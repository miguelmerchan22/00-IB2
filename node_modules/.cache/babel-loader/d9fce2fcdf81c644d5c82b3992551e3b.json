{"ast":null,"code":"import _regeneratorRuntime from \"/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/src/components/Datos/index.js\";\nimport React, { Component } from \"react\";\n\nvar Datos = /*#__PURE__*/function (_Component) {\n  _inherits(Datos, _Component);\n\n  var _super = _createSuper(Datos);\n\n  function Datos(props) {\n    var _this;\n\n    _classCallCheck(this, Datos);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      totalInvestors: 0,\n      totalInvested: 0,\n      totalRefRewards: 0,\n      precioSITE: 1,\n      wallet: \"\",\n      plan: 0,\n      cantidad: 0,\n      hand: 0\n    };\n    _this.totalInvestors = _this.totalInvestors.bind(_assertThisInitialized(_this));\n    _this.asignarPlan = _this.asignarPlan.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Datos, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _this2 = this;\n\n        var resultado;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(typeof window.ethereum !== \"undefined\")) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 3;\n                return window.ethereum.request({\n                  method: \"eth_requestAccounts\"\n                });\n\n              case 3:\n                resultado = _context2.sent;\n                //console.log(resultado[0]);\n                this.setState({\n                  currentAccount: resultado[0]\n                });\n\n              case 5:\n                setInterval( /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n                  var resultado;\n                  return _regeneratorRuntime.wrap(function _callee$(_context) {\n                    while (1) {\n                      switch (_context.prev = _context.next) {\n                        case 0:\n                          if (!(typeof window.ethereum !== \"undefined\")) {\n                            _context.next = 5;\n                            break;\n                          }\n\n                          _context.next = 3;\n                          return window.ethereum.request({\n                            method: \"eth_requestAccounts\"\n                          });\n\n                        case 3:\n                          resultado = _context.sent;\n\n                          //console.log(resultado[0]);\n                          _this2.setState({\n                            currentAccount: resultado[0]\n                          });\n\n                        case 5:\n                        case \"end\":\n                          return _context.stop();\n                      }\n                    }\n                  }, _callee);\n                })), 7 * 1000);\n                setInterval(function () {\n                  return _this2.totalInvestors();\n                }, 3 * 1000);\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"totalInvestors\",\n    value: function () {\n      var _totalInvestors = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n        var esto, retirado, decimales, isAdmin;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.next = 2;\n                return this.props.wallet.contractBinary.methods.setstate().call({\n                  from: this.state.currentAccount\n                });\n\n              case 2:\n                esto = _context3.sent;\n                _context3.next = 5;\n                return this.props.wallet.contractBinary.methods.totalRefWitdrawl().call({\n                  from: this.state.currentAccount\n                });\n\n              case 5:\n                retirado = _context3.sent;\n                _context3.next = 8;\n                return this.props.wallet.contractToken.methods.decimals().call({\n                  from: this.state.currentAccount\n                });\n\n              case 8:\n                decimales = _context3.sent;\n                _context3.next = 11;\n                return this.props.wallet.contractBinary.methods.admin(this.state.currentAccount).call({\n                  from: this.state.currentAccount\n                });\n\n              case 11:\n                isAdmin = _context3.sent;\n                this.setState({\n                  totalInvestors: esto.Investors,\n                  totalInvested: esto.Invested / Math.pow(10, decimales),\n                  totalRefRewards: esto.RefRewards / Math.pow(10, decimales),\n                  retirado: retirado / Math.pow(10, decimales),\n                  admin: isAdmin\n                });\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this);\n      }));\n\n      function totalInvestors() {\n        return _totalInvestors.apply(this, arguments);\n      }\n\n      return totalInvestors;\n    }()\n  }, {\n    key: \"asignarPlan\",\n    value: function () {\n      var _asignarPlan = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4() {\n        var transaccion;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.next = 2;\n                return this.props.wallet.contractBinary.methods.asignarMembership(this.state.wallet).send({\n                  from: this.state.currentAccount\n                });\n\n              case 2:\n                transaccion = _context4.sent;\n                alert(\"verifica la transaccion \" + transaccion);\n                setTimeout(window.open(\"https://bscscan.com/tx/\".concat(transaccion), \"_blank\"), 3000);\n                this.setState({\n                  plan: 0\n                });\n\n              case 6:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this);\n      }));\n\n      function asignarPlan() {\n        return _asignarPlan.apply(this, arguments);\n      }\n\n      return asignarPlan;\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      if (this.state.admin === true) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"content-wrapper-before blue-grey lighten-5\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 9\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col s12\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"row counters\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-3 col-12 text-center text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }\n        }, this.state.totalInvestors), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 13\n          }\n        }, \"Inversores Globales\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-3 col-12 text-center text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 13\n          }\n        }, (this.state.totalInvested / this.state.precioSITE).toFixed(2), \" \", \"USDT\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }\n        }, \"total invested\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-3 col-12 text-center text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }\n        }, (this.state.totalRefRewards / this.state.precioSITE).toFixed(2), \" \", \"USDT\", \" \"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }\n        }, \"Total referidos\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-3 col-12 text-center text-white\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"h3\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }\n        }, this.state.retirado, \" USDT\"), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }\n        }, \"retirado Global\")), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-3 col-12 text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }\n        }, \"Wallet:\", \" \", \" \", /*#__PURE__*/React.createElement(\"input\", {\n          type: \"text\",\n          onChange: this.handleChangeWALLET,\n          placeholder: \"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 26\n          }\n        }))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-3 col-12 text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"input\", {\n          type: \"number\",\n          onChange: this.handleChangeCANTIDAD,\n          placeholder: \"1000 USDT\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info d-block text-center mx-auto mt-1\",\n          onClick: /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5() {\n            var transaccion;\n            return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.next = 2;\n                    return _this3.props.wallet.contractToken.methods.transfer(_this3.state.wallet, parseInt(_this3.state.cantidad * Math.pow(10, 6))).send({\n                      from: _this3.props.wallet.currentAccount\n                    });\n\n                  case 2:\n                    transaccion = _context5.sent;\n                    alert(\"verifica la transaccion \" + transaccion);\n                    setTimeout(window.open(\"https://bscscan.com/tx/\".concat(transaccion), \"_blank\"), 3000);\n\n                    _this3.setState({\n                      cantidad: 0\n                    });\n\n                  case 6:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, _callee5);\n          })),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }\n        }, \"Send Token\"))), /*#__PURE__*/React.createElement(\"div\", {\n          className: \"col-lg-3 col-12 text-center\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"p\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          type: \"button\",\n          className: \"btn btn-info d-block text-center mx-auto mt-1\",\n          onClick: function onClick() {\n            return _this3.asignarPlan();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 15\n          }\n        }, \"Asignar Membership\")))))));\n      } else {\n        return /*#__PURE__*/React.createElement(React.Fragment, null);\n      }\n    }\n  }]);\n\n  return Datos;\n}(Component);\n\nexport { Datos as default };","map":{"version":3,"sources":["/Users/miguelmerchan/Documents/GitHub/0-INFINITY-BLOCKS-TEST-UNILEVEL/src/components/Datos/index.js"],"names":["React","Component","Datos","props","state","totalInvestors","totalInvested","totalRefRewards","precioSITE","wallet","plan","cantidad","hand","bind","asignarPlan","window","ethereum","request","method","resultado","setState","currentAccount","setInterval","contractBinary","methods","setstate","call","from","esto","totalRefWitdrawl","retirado","contractToken","decimals","decimales","admin","isAdmin","Investors","Invested","RefRewards","asignarMembership","send","transaccion","alert","setTimeout","open","toFixed","handleChangeWALLET","handleChangeCANTIDAD","transfer","parseInt"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\n\nexport default class Datos extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      totalInvestors: 0,\n      totalInvested: 0,\n      totalRefRewards: 0,\n      precioSITE: 1,\n      wallet: \"\",\n      plan: 0,\n      cantidad: 0,\n      hand: 0,\n    };\n\n    this.totalInvestors = this.totalInvestors.bind(this);\n    this.asignarPlan = this.asignarPlan.bind(this);\n  }\n\n  async componentDidMount() {\n    if (typeof window.ethereum !== \"undefined\") {\n      var resultado = await window.ethereum.request({\n        method: \"eth_requestAccounts\",\n      });\n      //console.log(resultado[0]);\n      this.setState({\n        currentAccount: resultado[0],\n      });\n    }\n    setInterval(async () => {\n      if (typeof window.ethereum !== \"undefined\") {\n        var resultado = await window.ethereum.request({\n          method: \"eth_requestAccounts\",\n        });\n        //console.log(resultado[0]);\n        this.setState({\n          currentAccount: resultado[0],\n        });\n      }\n    }, 7 * 1000);\n    setInterval(() => this.totalInvestors(), 3 * 1000);\n  }\n\n\n  async totalInvestors() {\n\n    let esto = await this.props.wallet.contractBinary.methods\n      .setstate()\n      .call({ from: this.state.currentAccount });\n\n    var retirado = await this.props.wallet.contractBinary.methods\n      .totalRefWitdrawl()\n      .call({ from: this.state.currentAccount });\n\n    var decimales = await this.props.wallet.contractToken.methods\n      .decimals()\n      .call({ from: this.state.currentAccount });\n\n    var isAdmin = await this.props.wallet.contractBinary.methods.admin(this.state.currentAccount).call({from:this.state.currentAccount});\n    \n\n    this.setState({\n      totalInvestors: esto.Investors,\n      totalInvested: esto.Invested / 10 ** decimales,\n      totalRefRewards: esto.RefRewards / 10 ** decimales,\n      retirado: retirado / 10 ** decimales,\n      admin: isAdmin,\n    });\n  }\n\n  async asignarPlan() {\n    var transaccion = await this.props.wallet.contractBinary.methods\n      .asignarMembership(this.state.wallet)\n      .send({ from: this.state.currentAccount });\n    \n    alert(\"verifica la transaccion \" + transaccion);\n    setTimeout(\n      window.open(`https://bscscan.com/tx/${transaccion}`, \"_blank\"),\n      3000\n    );\n    this.setState({ plan: 0 });\n  }\n\n  render() {\n    if (this.state.admin === true) {\n      return (\n        <div className=\"row\">\n        <div className=\"content-wrapper-before blue-grey lighten-5\"></div>\n        <div className=\"col s12\">\n          <div className=\"container\">\n\n\n        <div className=\"row counters\">\n          <div className=\"col-lg-3 col-12 text-center text-white\">\n            <h3>{this.state.totalInvestors}</h3>\n            <p>Inversores Globales</p>\n          </div>\n\n          <div className=\"col-lg-3 col-12 text-center text-white\">\n            <h3>\n              {(this.state.totalInvested / this.state.precioSITE).toFixed(2)}{\" \"}\n              USDT\n            </h3>\n            <p>total invested</p>\n          </div>\n\n          <div className=\"col-lg-3 col-12 text-center text-white\">\n            <h3>\n              {(this.state.totalRefRewards / this.state.precioSITE).toFixed(2)}{\" \"}\n              USDT{\" \"}\n            </h3>\n            <p>Total referidos</p>\n          </div>\n\n          <div className=\"col-lg-3 col-12 text-center text-white\">\n            <h3>{this.state.retirado} USDT</h3>\n            <p>retirado Global</p>\n          </div>\n\n          <div className=\"col-lg-3 col-12 text-center\">\n            <p>\n            Wallet:{\" \"} <input type=\"text\" onChange={this.handleChangeWALLET} placeholder=\"0x11134Bd1dd0219eb9B4Ab931c508834EA29C0F8d\"/> \n            </p>\n          </div>\n\n          <div className=\"col-lg-3 col-12 text-center\">\n            <input type=\"number\" onChange={this.handleChangeCANTIDAD} placeholder=\"1000 USDT\" />\n\n            <p>\n              <button\n                type=\"button\"\n                className=\"btn btn-info d-block text-center mx-auto mt-1\"\n                onClick={async () => {\n                  var transaccion =\n                    await this.props.wallet.contractToken.methods\n                      .transfer(\n                        this.state.wallet,\n                        parseInt(this.state.cantidad * 10 ** 6)\n                      )\n                      .send({ from: this.props.wallet.currentAccount });\n\n                  alert(\"verifica la transaccion \" + transaccion);\n                  setTimeout(\n                    window.open(\n                      `https://bscscan.com/tx/${transaccion}`,\n                      \"_blank\"\n                    ),\n                    3000\n                  );\n                  this.setState({ cantidad: 0 });\n                }}\n              >\n                Send Token\n              </button>\n            </p>\n          </div>\n\n          <div className=\"col-lg-3 col-12 text-center\">\n            <p>\n              <button\n                type=\"button\"\n                className=\"btn btn-info d-block text-center mx-auto mt-1\"\n                onClick={() => this.asignarPlan()}\n              >\n                Asignar Membership\n              </button>\n            </p>\n          </div>\n        </div>\n        </div>\n        </div>\n        </div>\n\n      );\n    } else {\n      return <></>;\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}